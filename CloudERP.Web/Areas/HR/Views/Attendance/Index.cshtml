@model CloudERP.Web.Areas.HR.Models.AttendanceViewModel
@{
    ViewBag.Title = "Attendance";
    //ViewBag.HeaderText = "TimeSheet";
    Layout = "~/Views/Shared/_AuthenticatedLayout.cshtml";
}

<div class="col-lg-12">
    <div class="col-lg-12">
        <a href="@Url.Action("Range")" class="btn btn-success">View By Range</a>
        <a id="exporttoexcel" href="#" class="btn btn-primary">Export To Excel</a>
    </div>
    <br />
    <div class="col-lg-12">
        <h3>
            @Model.Date.DayOfWeek
            <small style="padding-left: 2px">@Model.Date.ToString("dd MMM yyyy")</small>
        </h3>
    </div>
    <br />
    <div class="overflow-container">
        <div class="overflow-item-md btn-group btn-group-lg col-lg-12" role="group" aria-label="...">
            @foreach (var item in GetButtons())
            {
                @Html.Raw(item)
            }
        </div>
    </div>

    <div class="panel-body col-lg-12">
        <table class="table table-striped table-bordered table-hover" id="datatable" style="width:100%">
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Time-In</th>
                    <th>Time-Out</th>
                    <th>Total</th>
                    <th>Total Hours Rendered</th>
                    <th>Main Schedule</th>

                    @*if (User.IsInRole("Admin"))
                        {
                            <th></th>
                        }*@
                </tr>
            </thead>
        </table>
    </div>

    @using (Html.BeginForm("Index", "Attendance", FormMethod.Post))
            {
        <div class="col-lg-offset-7 col-lg-5 form-inline">
            <div class="form-group">
                Pick a Date:
            </div>
            <div class="form-group">
                <input type="text" id="datepicker" name="date" class="form-control" />
            </div>
            <div class="form-group">
                <input type="submit" value="Filter" class="form-control" />
            </div>
        </div>
    }

</div>


@section Scripts {

    <script>
        $(function () {
            $('#datepicker').datepicker(
            {
                //singleDate: true,
                //format: 'M/DD/YYYY',
                autoClose: true,
            });

            function getCookie(cname) {
                var name = cname + "=";
                var ca = document.cookie.split(';');
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];
                    while (c.charAt(0) == ' ') {
                        c = c.substring(1);
                    }
                    if (c.indexOf(name) == 0) {
                        return c.substring(name.length, c.length);
                    }
                }
                return "";
            }

            function download(url, param) {
                $("body").append("<form action='" + url + "' id='formexcel' method='POST' style='display:none;visibility:hidden'><input type='hidden' name='param' value='" + param + "'/></form>");
                $("#formexcel").submit();
                $("#formexcel").remove();
            }

            var dtable = $('#datatable').DataTable({
                responsive: true,
                processing: true,
                serverSide: true,
                ajax: {
                    url: '@Url.Action("Data", new {date = Model.Date})',
                    dataSrc: function (json) {
                        if (json.url !== undefined) {
                            download(json.url, json.param);
                        }

                        if (json.data !== undefined) {
                            return json.data;
                        } else {
                            setInterval(function () {
                                if (getCookie('dayuploadexcel') !== '') {
                                    document.cookie = 'dayuploadexcel=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                                    window.location = '@Url.Action("Index")';
                                }
                            }, 500);
                        }
                    },
                    error: function (xhr, error, thrown) {
                        window.location = '@Url.Action("Index")';
                    }
                },
                aoColumns: [
                    { "data": "name" },
                    { "data": "time_in" },
                    { "data": "time_out" },
                    { "data": "total", "bSortable": false, },
                    { "data": "overall_total", "bSortable": false, },
                    { "data": "main_schedule", "bSortable": false, },
                ]
            });

            $(".dataTables_filter input")
                .unbind()
                .bind('keyup', function (e) {
                    if (e.keyCode == 13) {
                        // Call the API search function
                        dtable.search(this.value).draw();
                    }
                    // Ensure we clear the search if they backspace far enough
                    if (this.value == "") {
                        dtable.search("").draw();
                    }
                    return;
                });

            $('#exporttoexcel').click(function () {
                dtable.ajax.url('@Url.Action("ExportToExcel", new {date = Model.Date})&frmt=byday&callbackurl=@Request.Url.AbsolutePath');
                dtable.search($(".dataTables_filter input").val()).draw();
                return false;
            });
        });
    </script>
}


@functions {

        public List<string> GetButtons()
        {
            var buttons = new List<string>();

            var date = Model.Date.AddDays(-(Model.Date.DayOfWeek != DayOfWeek.Sunday ? (int)Model.Date.DayOfWeek - 1 : 6));

            for (var x = 0; x < 7; x++)
            {
                var day = DayOfWeek.Sunday.ToString();

                if (x != 6)
                {
                    day = ((DayOfWeek)x + 1).ToString();
                }

                buttons.Add(string.Format("<a class='btn btn-primary {0}' href='/HR/Attendance/View/{1}/{2}/{3}'>{4}</a>",
                    date == Model.Date ? "active" : string.Empty,
                    date.Year,
                    date.Day,
                    date.Month,
                    day));

                date = date.AddDays(1);
            }

            return buttons;
        }

        public string GetTimeOut(DateTime? timeOut)
        {
            if (timeOut != null)
            {
                return Convert.ToDateTime(timeOut).ToString("g");
            }
            else
            {
                return string.Empty;
            }
        }

        public string GetTotalHours(DateTime startDate, DateTime? endDate)
        {
            if (endDate != null)
            {
                var eDate = Convert.ToDateTime(endDate);
                var result = eDate.Subtract(startDate);
                var minutes = eDate.Minute - startDate.Minute;
                return string.Format("{0}:{1}", result.TotalHours.ToString("0"), minutes.ToString("00"));
            }
            else
            {
                return string.Empty;
            }
        }

}
